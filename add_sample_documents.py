#!/usr/bin/env python3
"""
Add sample documents to demonstrate the organized file structure
"""

import os
from datetime import datetime
from utils_documents import DOCUMENT_FOLDERS

def create_sample_documents():
    """Create sample documents in organized folders"""
    print("🗂️  Creating Sample Documents in Organized Folders")
    print("=" * 55)
    
    # Sample documents to create
    sample_docs = [
        {
            'folder': 'po',
            'filename': 'PO-2025-001_purchase_order.pdf',
            'content': 'Sample Purchase Order Document\nPO Number: PO-2025-001\nDate: 2025-08-03'
        },
        {
            'folder': 'grn',
            'filename': 'GRN-2025-001_goods_receipt.pdf',
            'content': 'Sample GRN Document\nGRN Number: GRN-2025-001\nDate: 2025-08-03'
        },
        {
            'folder': 'jobwork',
            'filename': 'JW-2025-001_job_work_order.pdf',
            'content': 'Sample Job Work Document\nJob Number: JW-2025-001\nDate: 2025-08-03'
        },
        {
            'folder': 'invoices',
            'filename': 'INV-2025-001_sales_invoice.pdf',
            'content': 'Sample Sales Invoice\nInvoice Number: INV-2025-001\nDate: 2025-08-03'
        },
        {
            'folder': 'hr/employees',
            'filename': 'EMP-001_employee_documents.pdf',
            'content': 'Employee Document Package\nEmployee Code: EMP-001\nDate: 2025-08-03'
        },
        {
            'folder': 'hr/salaries',
            'filename': 'SAL-202508-001_salary_slip.pdf',
            'content': 'Salary Slip\nEmployee: EMP-001\nMonth: August 2025'
        },
        {
            'folder': 'hr/advances',
            'filename': 'ADV-001_advance_request.pdf',
            'content': 'Employee Advance Request\nEmployee: EMP-001\nAmount: ₹10,000'
        },
        {
            'folder': 'inventory',
            'filename': 'INV-STOCK-2025-001_stock_report.pdf',
            'content': 'Stock Report\nDate: 2025-08-03\nGenerated by: System'
        },
        {
            'folder': 'production',
            'filename': 'PROD-2025-001_production_report.pdf',
            'content': 'Production Report\nBatch: PROD-2025-001\nDate: 2025-08-03'
        },
        {
            'folder': 'quality',
            'filename': 'QC-2025-001_quality_certificate.pdf',
            'content': 'Quality Control Certificate\nBatch: QC-2025-001\nDate: 2025-08-03'
        },
        {
            'folder': 'expenses',
            'filename': 'EXP-2025-001_expense_receipt.pdf',
            'content': 'Expense Receipt\nExpense Number: EXP-2025-001\nDate: 2025-08-03'
        }
    ]
    
    # Create documents
    created_count = 0
    for doc in sample_docs:
        folder_path = os.path.join('uploads', doc['folder'])
        os.makedirs(folder_path, exist_ok=True)
        
        file_path = os.path.join(folder_path, doc['filename'])
        
        # Only create if doesn't exist
        if not os.path.exists(file_path):
            with open(file_path, 'w') as f:
                f.write(doc['content'])
            print(f"✓ Created: {file_path}")
            created_count += 1
        else:
            print(f"• Exists: {file_path}")
    
    print(f"\n📊 Summary:")
    print(f"• {created_count} new sample documents created")
    print(f"• Documents organized in {len(DOCUMENT_FOLDERS)} different folders")
    
    # Show final structure
    print(f"\n📁 Final Directory Structure:")
    for root, dirs, files in os.walk('uploads'):
        level = root.replace('uploads', '').count(os.sep)
        indent = '  ' * level
        folder_name = os.path.basename(root)
        file_count = len(files)
        print(f"{indent}{folder_name}/ ({file_count} files)")
        
        # Show first few files as examples
        subindent = '  ' * (level + 1)
        for i, file in enumerate(files[:3]):  # Show max 3 files per folder
            print(f"{subindent}• {file}")
        if len(files) > 3:
            print(f"{subindent}• ... and {len(files) - 3} more files")

if __name__ == '__main__':
    create_sample_documents()